version: '3.8'

services:
  # Serviço para rodar o Ollama e servir o modelo de linguagem
  ollama:
    build:
      context: ./ollama
    container_name: ollama_service
    ports:
      - "11434:11434"
    volumes:
      - ./ollama_data:/root/.ollama
    restart: unless-stopped
    # Passando as variáveis para o entrypoint do Ollama saber o que baixar.
    # ESTA É A ÚNICA FONTE DE VERDADE AGORA.
    environment:
      - EMBEDDING_MODEL=nomic-embed-text
      - LLM_MODEL=llama3.2:1b
    healthcheck:
      # A verificação agora depende do modelo de embedding que foi passado.
      test: ["CMD", "ollama", "show", "nomic-embed-text"]
      interval: 10s
      timeout: 30s
      retries: 30

  # Serviço da API Backend (FastAPI) para a lógica RAG
  rag-api:
    build:
      context: ./api
    container_name: rag_api_service
    depends_on:
      ollama:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ./api:/app
      - ./chroma_data:/app/chroma_db
    # A API lê as mesmas variáveis, garantindo consistência.
    environment:
      - OLLAMA_HOST=http://ollama:11434
      - EMBEDDING_MODEL=nomic-embed-text
      - LLM_MODEL=llama3.2:1b
    restart: unless-stopped

  # Serviço do Frontend (Streamlit)
  streamlit-app:
    build:
      context: ./frontend
    container_name: streamlit_app_service
    depends_on:
      - rag-api
    ports:
      - "8501:8501"
    volumes:
      - ./frontend:/app
    environment:
      - API_URL=http://rag-api:8000
    restart: unless-stopped

volumes:
  ollama_data:
  chroma_data:
